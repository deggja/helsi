{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      workouts: [],\n      exercises: [],\n      selectedWorkout: null,\n      hideExercises: {},\n      workoutDate: ''\n    };\n  },\n  created() {\n    this.loadWorkouts();\n  },\n  computed: {\n    filteredExercises() {\n      return this.exercises.filter(exercise => !this.hideExercises[exercise.Name]);\n    }\n  },\n  methods: {\n    loadWorkouts() {\n      axios.get('/workouts').then(response => {\n        this.workouts = response.data;\n        console.log('Workouts loaded:', this.workouts); // Debugging line to check data loading\n        alert('Workouts loaded successfully!');\n      }).catch(error => {\n        console.error(\"Error loading workouts:\", error);\n        alert('Failed to load workouts: ' + error.message);\n      });\n    },\n    fetchExercises() {\n      const workout = this.workouts.find(w => w.Name === this.selectedWorkout);\n      this.exercises = workout ? workout.Exercises : [];\n      this.disabledExercises = {};\n    },\n    handleInput(exerciseName) {\n      const currentExercise = this.exercises.find(ex => ex.Name === exerciseName);\n      const weightsNotEmpty = currentExercise.Weights.some(weight => weight > 0);\n      if (exerciseName === \"Benkpress med stong\") {\n        this.hideExercises[\"Benkpress med manuala\"] = weightsNotEmpty;\n        this.hideExercises[\"Benkpress med stong\"] = !weightsNotEmpty;\n      } else if (exerciseName === \"Benkpress med manuala\") {\n        this.hideExercises[\"Benkpress med stong\"] = weightsNotEmpty;\n        this.hideExercises[\"Benkpress med manuala\"] = !weightsNotEmpty;\n      }\n      if (!weightsNotEmpty) {\n        this.hideExercises[\"Benkpress med stong\"] = false;\n        this.hideExercises[\"Benkpress med manuala\"] = false;\n      }\n    },\n    saveWorkout() {\n      if (!this.workoutDate) {\n        alert('Please select a workout date.');\n        return;\n      }\n      const workoutData = {\n        Name: this.selectedWorkout,\n        Date: this.workoutDate,\n        Exercises: this.exercises\n      };\n      console.log(\"Saving workout session:\", workoutData);\n      axios.post('/api/log', workoutData).then(() => {\n        alert('Workout saved!');\n      }).catch(error => {\n        console.error(\"Error saving workout:\", error);\n        console.error(\"Error details:\", error.response.data);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","workouts","exercises","selectedWorkout","hideExercises","workoutDate","created","loadWorkouts","computed","filteredExercises","filter","exercise","Name","methods","get","then","response","console","log","alert","catch","error","message","fetchExercises","workout","find","w","Exercises","disabledExercises","handleInput","exerciseName","currentExercise","ex","weightsNotEmpty","Weights","some","weight","saveWorkout","workoutData","Date","post"],"sources":["/Users/drd/Repos/Public/helsi/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Log workout</h1>\n    <select v-model=\"selectedWorkout\" @change=\"fetchExercises\">\n      <option v-for=\"workout in workouts\" :key=\"workout.Name\" :value=\"workout.Name\">\n        {{ workout.Name }}\n      </option>\n    </select>\n\n    <input type=\"date\" v-model=\"workoutDate\" placeholder=\"Workout Date\">\n\n    <div class=\"exercises\" v-for=\"exercise in filteredExercises\" :key=\"exercise.Name\">\n      <h2>{{ exercise.Name }}</h2>\n      <div class=\"set-details\" v-for=\"setIndex in exercise.Sets\" :key=\"setIndex\">\n        Set {{ setIndex }}:\n        <input type=\"number\" v-model=\"exercise.Reps[setIndex-1]\" @change=\"handleInput(exercise.Name)\" placeholder=\"Reps\"/>\n        <input type=\"number\" v-model=\"exercise.Weights[setIndex-1]\" @change=\"handleInput(exercise.Name)\" placeholder=\"Weight (kg)\"/>\n      </div>\n    </div>\n\n    <button @click=\"saveWorkout\">Save Workout</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      workouts: [],\n      exercises: [],\n      selectedWorkout: null,\n      hideExercises: {},\n      workoutDate: ''\n    };\n  },\n  created() {\n    this.loadWorkouts();\n  },\n  computed: {\n    filteredExercises() {\n      return this.exercises.filter(exercise => !this.hideExercises[exercise.Name]);\n    }\n  },\n  methods: {\n    loadWorkouts() {\n    axios.get('/workouts').then(response => {\n      this.workouts = response.data;\n      console.log('Workouts loaded:', this.workouts);  // Debugging line to check data loading\n      alert('Workouts loaded successfully!');\n    }).catch(error => {\n      console.error(\"Error loading workouts:\", error);\n      alert('Failed to load workouts: ' + error.message);\n    });\n  },\n  fetchExercises() {\n    const workout = this.workouts.find(w => w.Name === this.selectedWorkout);\n    this.exercises = workout ? workout.Exercises : [];\n    this.disabledExercises = {};\n  },\n  handleInput(exerciseName) {\n    const currentExercise = this.exercises.find(ex => ex.Name === exerciseName);\n    const weightsNotEmpty = currentExercise.Weights.some(weight => weight > 0);\n\n    if (exerciseName === \"Benkpress med stong\") {\n      this.hideExercises[\"Benkpress med manuala\"] = weightsNotEmpty;\n      this.hideExercises[\"Benkpress med stong\"] = !weightsNotEmpty;\n    } else if (exerciseName === \"Benkpress med manuala\") {\n      this.hideExercises[\"Benkpress med stong\"] = weightsNotEmpty;\n      this.hideExercises[\"Benkpress med manuala\"] = !weightsNotEmpty;\n    }\n\n    if (!weightsNotEmpty) {\n      this.hideExercises[\"Benkpress med stong\"] = false;\n      this.hideExercises[\"Benkpress med manuala\"] = false;\n    }\n  },\n  saveWorkout() {\n      if (!this.workoutDate) {\n        alert('Please select a workout date.');\n        return;\n      }\n\n      const workoutData = {\n        Name: this.selectedWorkout,\n        Date: this.workoutDate,\n        Exercises: this.exercises\n      };\n\n      console.log(\"Saving workout session:\", workoutData);\n      axios.post('/api/log', workoutData)\n        .then(() => {\n            alert('Workout saved!');\n        })\n        .catch(error => {\n            console.error(\"Error saving workout:\", error);\n            console.error(\"Error details:\", error.response.data);\n        });\n    }\n}\n\n};\n</script>\n\n<style lang=\"scss\">\n$background-color: #000;\n$text-color: #fff;\n$button-color: #673ab7;\n$input-background: #9c27b0;\n$input-text-color: #fff;\n\n.container {\n  background-color: $background-color;\n  color: $text-color;\n  padding: 20px;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 600px;\n  margin: 20px auto;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n}\n\nselect, input[type=\"number\"] {\n  width: 100%;\n  padding: 8px;\n  margin: 10px 0;\n  background-color: $input-background;\n  color: $input-text-color;\n  border: 1px solid darken($input-background, 15%);\n  border-radius: 4px;\n  outline: none;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n\n  &::placeholder {\n    color: lighten($input-text-color, 20%);\n  }\n}\n\nbutton {\n  width: 100%;\n  padding: 10px;\n  background-color: $button-color;\n  color: $text-color;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: lighten($button-color, 10%);\n  }\n}\n\n.exercises {\n  margin-top: 20px;\n}\n\n.exercise-sets {\n  display: flex;\n  justify-content: space-between;\n  input {\n    flex: 1;\n    &:not(:last-child) {\n      margin-right: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}