{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Log workout\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"onChange\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedWorkout = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.fetchExercises && _ctx.fetchExercises(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.workouts, workout => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: workout.Name,\n      value: workout.Name\n    }, _toDisplayString(workout.Name), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, _ctx.selectedWorkout]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.workoutDate = $event),\n    placeholder: \"Workout Date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.workoutDate]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredExercises, exercise => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"exercises\",\n      key: exercise.Name\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(exercise.Name), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(exercise.Sets, setIndex => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"set-details\",\n        key: setIndex\n      }, [_createTextVNode(\" Set \" + _toDisplayString(setIndex) + \": \", 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n        type: \"number\",\n        \"onUpdate:modelValue\": $event => exercise.Reps[setIndex - 1] = $event,\n        onChange: $event => _ctx.handleInput(exercise.Name),\n        placeholder: \"Reps\"\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelText, exercise.Reps[setIndex - 1]]]), _withDirectives(_createElementVNode(\"input\", {\n        type: \"number\",\n        \"onUpdate:modelValue\": $event => exercise.Weights[setIndex - 1] = $event,\n        onChange: $event => _ctx.handleInput(exercise.Name),\n        placeholder: \"Weight (kg)\"\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), [[_vModelText, exercise.Weights[setIndex - 1]]])]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.saveWorkout && _ctx.saveWorkout(...args))\n  }, \"Save Workout\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_cache","$event","_ctx","selectedWorkout","onChange","args","fetchExercises","_Fragment","_renderList","workouts","workout","key","Name","value","_hoisted_3","type","workoutDate","placeholder","filteredExercises","exercise","_toDisplayString","Sets","setIndex","_createTextVNode","Reps","handleInput","_hoisted_4","Weights","_hoisted_5","onClick","saveWorkout"],"sources":["/Users/drd/Repos/Public/helsi/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Log workout</h1>\n    <select v-model=\"selectedWorkout\" @change=\"fetchExercises\">\n      <option v-for=\"workout in workouts\" :key=\"workout.Name\" :value=\"workout.Name\">\n        {{ workout.Name }}\n      </option>\n    </select>\n\n    <input type=\"date\" v-model=\"workoutDate\" placeholder=\"Workout Date\" />\n\n    <div class=\"exercises\" v-for=\"exercise in filteredExercises\" :key=\"exercise.Name\">\n      <h2>{{ exercise.Name }}</h2>\n      <div class=\"set-details\" v-for=\"setIndex in exercise.Sets\" :key=\"setIndex\">\n        Set {{ setIndex }}:\n        <input type=\"number\" v-model=\"exercise.Reps[setIndex-1]\" @change=\"handleInput(exercise.Name)\" placeholder=\"Reps\"/>\n        <input type=\"number\" v-model=\"exercise.Weights[setIndex-1]\" @change=\"handleInput(exercise.Name)\" placeholder=\"Weight (kg)\"/>\n      </div>\n    </div>\n\n    <button @click=\"saveWorkout\">Save Workout</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      workouts: [],\n      exercises: [],\n      selectedWorkout: null,\n      hideExercises: {},\n      workoutDate: ''\n    };\n  },\n  created() {\n    this.loadWorkouts();\n  },\n  computed: {\n    filteredExercises() {\n      return this.exercises.filter(exercise => !this.hideExercises[exercise.Name]);\n    }\n  },\n  methods: {\n    loadWorkouts() {\n    axios.get('/api/workouts').then(response => {\n      this.workouts = response.data;\n    }).catch(error => {\n      console.error(\"Error loading workouts:\", error);\n    });\n  },\n  fetchExercises() {\n    const workout = this.workouts.find(w => w.Name === this.selectedWorkout);\n    this.exercises = workout ? workout.Exercises : [];\n    this.disabledExercises = {};  // Reset disabled exercises when a new workout is selected\n  },\n  handleInput(exerciseName) {\n    const currentExercise = this.exercises.find(ex => ex.Name === exerciseName);\n    \n    // Focus on whether weights are empty to decide hiding logic since reps are predefined\n    const weightsNotEmpty = currentExercise.Weights.some(weight => weight > 0);\n\n    if (exerciseName === \"Benkpress med stong\") {\n      this.hideExercises[\"Benkpress med manuala\"] = weightsNotEmpty;\n      this.hideExercises[\"Benkpress med stong\"] = !weightsNotEmpty;\n    } else if (exerciseName === \"Benkpress med manuala\") {\n      this.hideExercises[\"Benkpress med stong\"] = weightsNotEmpty;\n      this.hideExercises[\"Benkpress med manuala\"] = !weightsNotEmpty;\n    }\n\n    // Reset hide conditions if all weights inputs are empty\n    if (!weightsNotEmpty) {\n      this.hideExercises[\"Benkpress med stong\"] = false;\n      this.hideExercises[\"Benkpress med manuala\"] = false;\n    }\n  },\n  saveWorkout() {\n      if (!this.workoutDate) {\n        alert('Please select a workout date.');\n        return;\n      }\n\n      const workoutData = {\n        Name: this.selectedWorkout,\n        Date: this.workoutDate,\n        Exercises: this.exercises\n      };\n\n      console.log(\"Saving workout session:\", workoutData);\n      axios.post('/api/log', workoutData)\n          .then(() => {\n              alert('Workout saved!');\n          })\n          .catch(error => {\n              console.error(\"Error saving workout:\", error);\n              console.error(\"Error details:\", error.response.data);\n          });\n    }\n  }\n}\n\n};\n</script>\n\n<style lang=\"scss\">\n$background-color: #000;\n$text-color: #fff;\n$button-color: #673ab7;\n$input-background: #9c27b0;\n$input-text-color: #fff;\n\n.container {\n  background-color: $background-color;\n  color: $text-color;\n  padding: 20px;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 600px;\n  margin: 20px auto;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n}\n\nselect, input[type=\"number\"] {\n  width: 100%;\n  padding: 8px;\n  margin: 10px 0;\n  background-color: $input-background;\n  color: $input-text-color;\n  border: 1px solid darken($input-background, 15%);\n  border-radius: 4px;\n  outline: none;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n\n  &::placeholder {\n    color: lighten($input-text-color, 20%);\n  }\n}\n\nbutton {\n  width: 100%;\n  padding: 10px;\n  background-color: $button-color;\n  color: $text-color;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: lighten($button-color, 10%);\n  }\n}\n\n.exercises {\n  margin-top: 20px;\n}\n\n.exercise-sets {\n  display: flex;\n  justify-content: space-between;\n  input {\n    flex: 1;\n    &:not(:last-child) {\n      margin-right: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAoB,YAAhB,aAAW;mBAFnB;mBAAA;mBAAA;;uBACEC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAoB,E,gBACpBH,mBAAA,CAIS;IAPb,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGqBC,IAAA,CAAAC,eAAe,GAAAF,MAAA;IAAGG,QAAM,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEH,IAAA,CAAAI,cAAA,IAAAJ,IAAA,CAAAI,cAAA,IAAAD,IAAA,CAAc;yBACvDR,mBAAA,CAESU,SAAA,QANfC,WAAA,CAIgCN,IAAA,CAAAO,QAAQ,EAAnBC,OAAO;yBAAtBb,mBAAA,CAES;MAF4Bc,GAAG,EAAED,OAAO,CAACE,IAAI;MAAGC,KAAK,EAAEH,OAAO,CAACE;wBACnEF,OAAO,CAACE,IAAI,wBALvBE,UAAA;2FAGqBZ,IAAA,CAAAC,eAAe,E,mBAMhCP,mBAAA,CAAsE;IAA/DmB,IAAI,EAAC,MAAM;IATtB,uBAAAf,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASgCC,IAAA,CAAAc,WAAW,GAAAf,MAAA;IAAEgB,WAAW,EAAC;iDAAzBf,IAAA,CAAAc,WAAW,E,sBAEvCnB,mBAAA,CAOMU,SAAA,QAlBVC,WAAA,CAW8CN,IAAA,CAAAgB,iBAAiB,EAA7BC,QAAQ;yBAAtCtB,mBAAA,CAOM;MAPDF,KAAK,EAAC,WAAW;MAAwCgB,GAAG,EAAEQ,QAAQ,CAACP;QAC1EhB,mBAAA,CAA4B,YAAAwB,gBAAA,CAArBD,QAAQ,CAACP,IAAI,mB,kBACpBf,mBAAA,CAIMU,SAAA,QAjBZC,WAAA,CAakDW,QAAQ,CAACE,IAAI,EAAzBC,QAAQ;2BAAxCzB,mBAAA,CAIM;QAJDF,KAAK,EAAC,aAAa;QAAoCgB,GAAG,EAAEW;UAbvEC,gBAAA,CAaiF,OACrE,GAAAH,gBAAA,CAAGE,QAAQ,IAAG,IAClB,iB,gBAAA1B,mBAAA,CAAkH;QAA3GmB,IAAI,EAAC,QAAQ;QAf5B,uBAAAd,MAAA,IAesCkB,QAAQ,CAACK,IAAI,CAACF,QAAQ,QAAArB,MAAA;QAAMG,QAAM,EAAAH,MAAA,IAAEC,IAAA,CAAAuB,WAAW,CAACN,QAAQ,CAACP,IAAI;QAAGK,WAAW,EAAC;+CAflHS,UAAA,I,cAesCP,QAAQ,CAACK,IAAI,CAACF,QAAQ,O,mBACpD1B,mBAAA,CAA4H;QAArHmB,IAAI,EAAC,QAAQ;QAhB5B,uBAAAd,MAAA,IAgBsCkB,QAAQ,CAACQ,OAAO,CAACL,QAAQ,QAAArB,MAAA;QAAMG,QAAM,EAAAH,MAAA,IAAEC,IAAA,CAAAuB,WAAW,CAACN,QAAQ,CAACP,IAAI;QAAGK,WAAW,EAAC;+CAhBrHW,UAAA,I,cAgBsCT,QAAQ,CAACQ,OAAO,CAACL,QAAQ,O;;kCAI3D1B,mBAAA,CAAkD;IAAzCiC,OAAK,EAAA7B,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEH,IAAA,CAAA4B,WAAA,IAAA5B,IAAA,CAAA4B,WAAA,IAAAzB,IAAA,CAAW;KAAE,cAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}